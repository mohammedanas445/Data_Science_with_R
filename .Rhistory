#Q1
load("IMDB_movies.Rdata")
#Q1
load("IMDB_movies.Rdata")
#Q1
load("IMDB_movies.Rdata")
#Q1
load("IMDB_movies.Rdata")
#Q2
#a
hist(dat$rating,main = paste("Histogram of Rating"),xlab = "Rating")
load("D:/Data Science with R/Data-Science-with-R-Week-3--main/IMDB_movies.Rdata")
#Q4
boxplot(dat$men_rating,dat$women_rating, names = c("Men","Women"), main = "Boxplot of Ratings by gender")
#a
data("iris")
#a
data("iris")
View(iris)
iris$Species
iris$Species[1]
iris$Species[2]
levels(iris$Species)
levels(iris$Species)[1]
levels(iris$Species)[2]
ind1 <- levels(iris$Species)[1]
ind1 <- iris$Species==levels(iris$Species)[1]
ind2 <- iris$Species==levels(iris$Species)[2]
ind3 <- iris$Species==levels(iris$Species)[3]
boxplot(iris$Sepal.Length[ind1],iris$Sepal.Length[ind2],iris$Sepal.Length[ind3],names =levels(iris$Species))
boxplot(iris$Sepal.Width[ind1],iris$Sepal.Width[ind2],iris$Sepal.Width[ind3],names =levels(iris$Species))
boxplot(iris$Petal.Length[ind1],iris$Petal.Length[ind2],iris$Petal.Length[ind3],names =levels(iris$Species))
boxplot(iris$Sepal.Length[ind1],iris$Sepal.Length[ind2],iris$Sepal.Length[ind3],names =levels(iris$Species),main= "Boxplot of Sepal Length")
boxplot(iris$Sepal.Width[ind1],iris$Sepal.Width[ind2],iris$Sepal.Width[ind3],names =levels(iris$Species),main="Boxplot of Sepal Width")
boxplot(iris$Petal.Length[ind1],iris$Petal.Length[ind2],iris$Petal.Length[ind3],names =levels(iris$Species),main="Boxplot of Petal Length")
boxplot(iris$Petal.Width[ind1],iris$Petal.Width[ind2],iris$Petal.Width[ind3],names =levels(iris$Species),main="Boxplot of Petal Width")
load("D:/Data Science with R/Data-Science-with-R-Week-3--main/IMDB_movies.Rdata")
#Q8
year_category <- (dat$year>1996)+1
plot(dat$over.votes[before_1996],dat$rating[before_1996],xlab = "# Votes",ylab = "Rating",pch = 16,col = year_category)
plot(dat$over.votes,dat$rating,xlab = "# Votes",ylab = "Rating",pch = 16,col = year_category)
plot(iris$Sepal.Length,iris$Petal.Length,pch =16,col = iris$Species)
plot(iris$Sepal.Length,iris$Petal.Length,pch =16,col = iris$Species,xlab = "Sepal Length",ylab = "Petal Length", main = "Petal.Length Vs Sepal.Length")
##################################
#c
library(MASS)
?ships
data("ships")
plot(ships$service,ships$incidents,pch =16, col = ships$type,xlab = "Aggregate Months of Service",ylab = "# Damage Incidents", main = "Incidents Vs Service")
legend("bottomrigth",ships$type,pch=16,col = ships$type)
legend("bottomrigth",levels(ships$type),pch=16,col = ships$type)
legend("bottomright",levels(ships$type),pch=16,col = ships$type)
legend("bottomright",levels(ships$type),pch=16, col = ships$type)
#############################
#d
library(xml2)
legend("bottomright",levels(ships$type),pch=16, col = ships$type)
##################################
#c
library(MASS)
data("ships")
plot(ships$service,ships$incidents,pch =16, col = ships$type,xlab = "Aggregate Months of Service",ylab = "# Damage Incidents", main = "Incidents Vs Service")
legend("bottomright",levels(ships$type),pch=16, col = ships$type)
legend("bottomright",levels(ships$type),pch=16, fill = ships$type)
legend("bottomright",levels(ships$type),pch=16, col = ships$type)
legend("bottomright",levels(ships$type),pch=16, col = ships$type)
##################################
#c
library(MASS)
data("ships")
plot(ships$service,ships$incidents,pch =16, col = ships$type,xlab = "Aggregate Months of Service",ylab = "# Damage Incidents", main = "Incidents Vs Service")
legend("bottomright",levels(ships$type),pch=16, col = ships$type)
legend("bottomright",c("after 1996","before 1996"), col = c(2,1), pch =16)
legend("bottomright",levels(ships$type), col = ships$type,pch=16)
legend("bottomright",levels(ships$type), col = ships$type,pch=16)
legend("bottomright",levels(ships$type), col = c(1,2,3,4,5),pch=16)
plot(ships$service,ships$incidents,pch =16, col = ships$type,xlab = "Aggregate Months of Service",ylab = "# Damage Incidents", main = "Incidents Vs Service")
legend("bottomright",levels(ships$type), col = c(1,2,3,4,5),pch=16)
?rbinom
?sample
#################################
#e
bottle <- array(1,dim = 100)
sample(bottle)
sample(bottle,size = 1)
bottle[1] <- bottle[1]-1
delete(bottle[1])
remove(bottle[1])
drop(bottle[1])
x <- list(1,100)
x <- list(1)*100
x <- [1]*100
x <- [1]
x <- [1,1]
x <- ([1,1])
bottle <- bottle[(1:(2-1))+((2+1):length(bottle))]
bottle <- array(1,dim = 100)
bottle[2]=0
bottle <- bottle[(1:(2-1))+((2+1):length(bottle))]
bottle <- array(1,dim = 100)
bottle[2]=0
bottle <- bottle[(1:(2))+((2+1):length(bottle))]
bottle <- bottle[(1:(2))+((2+1):length(bottle))]
bottle <- array(1,dim = 100)
bottle[2]=0
bottle <- bottle[1:length(bottle))]
bottle <- bottle[1:length(bottle)]
bottle <- bottle[(1:length(bottle))-2]
bottle <- bottle[(1:length(bottle))-(2:2)]
bottle <- bottle[-2]
#################################
#e
bottle <- array(1,dim = 100)
number.of.days=numeric(1000)
for(j in 1:1000){
for (i in 1:200) {
ind <- sample(1:length(bottle),size = 1)
bottle[ind] <- bottle[ind]-0.5
if(bottle[ind]==0){
number.of.days[j]=i-1
break
}
}
}
number.of.days=numeric(1000)
for(j in 1:1000){
bottle <- array(1,dim = 100)
for (i in 1:200) {
ind <- sample(1:length(bottle),size = 1)
bottle[ind] <- bottle[ind]-0.5
if(bottle[ind]==0){
number.of.days[j]=i-1
break
}
}
}
mean(number.of.days)
for (k in 1:1000) {
if(number.of.days[k]==0){return(1)}
}
for (k in 1:1000) {
if(number.of.days[k]==1){return(1)}
}
for (k in 1:1000) {
if(number.of.days[k]==2){return(1)}
}
for (k in 1:1000) {
if(number.of.days[k]==3){return(1)}
}
for (k in 1:1000) {
if(number.of.days[k]==3){paste("1")}
}
for (k in 1:1000) {
if(number.of.days[k]==3){paste("1")}
}
for (k in 1:1000) {
number.of.days[k]==3
}
