setwd("D:/Data Science with R/Data-Science-with-R-Week-3--main")
library(imager)
library(jpeg)
# Function to apply White Patch method
white_patch <- function(image) {
# Find the maximum value for each color channel
max_values <- apply(image, c(1, 2), max)
# Normalize the image by dividing each channel by its corresponding maximum value
normalized_image <- array(0,dim = dim(image))
for (k in 1:3) {
normalized_image[,,k] <- image[,,k] / max_values[k]
}
# Scale the image to the range [0, 255]
scaled_image <- normalized_image * 255
return(scaled_image)
}
# Function to apply Gray World method
gray_world <- function(image) {
# Compute the average value for each color channel
avg_values <- apply(image, c(1, 2), mean)
# Compute the scaling factors by dividing each channel's average by the overall average
scaling_factors <- mean(avg_values) / avg_values
# Scale each channel by its corresponding scaling factor
scaled_image <- array(0,dim = dim(image))
for (i in 1:3) {
scaled_image[,,i] <- round(image[,,i] * scaling_factors[i])
}
# Clip the values to ensure they are within the valid range [0, 255]
scaled_image <- pmax(pmin(scaled_image, 255), 0)
return(scaled_image)
}
# Load the input image
image_path <- "land2.jpeg"
image <- readJPEG(image_path)
# Apply white patch preprocessing
white_patch_image <- white_patch(image)
# Apply gray world preprocessing
gray_world_image <- gray_world(image)
# Display the original and preprocessed images
par(mfrow = c(1, 3))
image_orig <- readJPEG(image_path)
#plot(1, 1, type = "n", xlab = "", ylab = "", xlim = c(0, 1), ylim = c(0, 1))
#rasterImage(image_orig, 0, 0, 1, 1)
#image_white_patch <- white_patch_image / 255
#plot(1, 1, type = "n", xlab = "", ylab = "", xlim = c(0, 1), ylim = c(0, 1))
#rasterImage(image_white_patch, 0, 0, 1, 1)
#image_gray_world <- gray_world_image / 255
#plot(1, 1, type = "n", xlab = "", ylab = "", xlim = c(0, 1), ylim = c(0, 1))
#rasterImage(image_gray_world, 0, 0, 1, 1)
plot(as.cimg(image_orig))
plot(as.cimg(white_patch_image))
plot(as.cimg(gray_world_image))
load("D:/Data Science with R/Data-Science-with-R-Week-3--main/IMDB_movies.Rdata")
View(dat)
#Q1
load("IMDB_movies.Rdata")
?hist()
#Q2
hist(dat$rating,xlab = "Rating")
#Q2
hist(dat$rating,main = paste("Histogram of Rating"),xlab = "Rating")
#b
hist(dat$rating,main = paste("Histogram of Rating"),xlab = "Rating",col = "white")
?boxplot
#Q1
load("IMDB_movies.Rdata")
#Q2
#a
hist(dat$rating,main = paste("Histogram of Rating"),xlab = "Rating")
#b
hist(dat$rating,main = paste("Histogram of Rating"),xlab = "Rating",col = "white")
#Q3
boxplot(dat$rating)
#Q3
boxplot(dat$rating,main = "boxplot of rating")
#Q3
boxplot(dat$rating,main = "boxplot of rating",xlable = Rating)
#Q3
boxplot(dat$rating,main = "boxplot of rating",xlable = "Rating")
#Q3
boxplot(dat$rating,main = "boxplot of rating",xlable = "Rating")
#Q3
boxplot(dat$rating,main = "Boxplot of Rating")
boxplot(dat$rating,main = "Boxplot of Rating",col = "pink")
boxplot(dat$rating,main = "Boxplot of Ratings",col = "pink")
View(dat)
#Q4
boxplot(dat$men_rating,dat$women_rating)
#Q4
boxplot(dat$men_rating,dat$women_rating,names = "Men Rating","Women Rating")
#Q4
boxplot(dat$men_rating,dat$women_rating,names = "Men Rating")
#Q4
boxplot(dat$men_rating,dat$women_rating)
#Q4
boxplot(dat$men_rating,dat$women_rating, xlab = "men rating")
#Q4
boxplot(dat$men_rating,dat$women_rating, xlab = ["men rating","women rating"])
#Q4
boxplot(dat$men_rating,dat$women_rating, xlab = "men rating","women rating")
#Q4
boxplot(dat$men_rating,dat$women_rating, xlab = "men rating",ylab = "women rating")
#Q4
boxplot(dat$men_rating,dat$women_rating, xlab = "men rating",xlab = "women rating")
#Q4
boxplot(dat$men_rating,dat$women_rating, xlab = c("men","women"))
#Q4
boxplot(dat$men_rating,dat$women_rating, names = c("men","women"))
#Q4
boxplot(dat$men_rating,dat$women_rating, names = c("Men","Women"))
#Q4
boxplot(dat$men_rating,dat$women_rating, names = c("Men","Women"), main = "Boxplot of Ratings")
#Q4
boxplot(dat$men_rating,dat$women_rating, names = c("Men","Women"), main = "Boxplot of Ratings by gender")
?hist
#Q2
#a
hist(dat$rating,main = paste("Histogram of Rating"),xlab = "Rating")
#Q5
hist(dat$men_rating,dat$women_rating,col = adjustcolor("red",alpha.f = .5))
?legend
View(dat)
#Q5
hist(dat$men_rating,col = adjustcolor("red",alpha.f = .5))
legend(dat$women_rating)
#Q5
hist(dat$men_rating,col = adjustcolor("red",alpha.f = .5))
legend(dat$women_rating,legend = "women")
#Q5
hist(dat$men_rating, main = "Histogram of Ratings",col = adjustcolor("red",alpha.f = .5),xlab = "Rating",xlim = c(dat$men_rating,dat$women_rating))
#Q5
hist(dat$men_rating, main = "Histogram of Ratings",col = adjustcolor("red",alpha.f = .5),xlab = "Rating",xlim = c(dat$men_rating,dat$women_rating))
#Q5
hist(dat$men_rating, main = "Histogram of Ratings",col = adjustcolor("red",alpha.f = .5),xlab = "Rating",ylim = c(dat$men_rating,dat$women_rating))
#Q5
hist(dat$men_rating, main = "Histogram of Ratings",col = adjustcolor("red",alpha.f = .5),xlab = "Rating",xlim = range(c(dat$men_rating,dat$women_rating)))
#Q5
hist(dat$men_rating, main = "Histogram of Ratings",col = adjustcolor("blue",alpha.f = .5),xlab = "Rating",xlim = range(c(dat$men_rating,dat$women_rating)))
hist(dat$women_rating,add = T, col = adjustcolor("red",alpha.f = .5),xlab = "Rating")
legend("topright",c("Men","Women"))
legend("topright",c("Men","Women"),fill = c(adjustcolor("blue"),adjustcolor("red")))
#Q5
hist(dat$men_rating, main = "Histogram of Ratings",col = adjustcolor("blue",alpha.f = .5),xlab = "Rating",xlim = range(c(dat$men_rating,dat$women_rating)))
hist(dat$women_rating,add = T, col = adjustcolor("red",alpha.f = .5))
legend("topright",c("Men","Women"),fill = c(adjustcolor("blue"),adjustcolor("red")))
#Q5
hist(dat$men_rating, main = "Histogram of Ratings",col = adjustcolor("blue",alpha.f = .5),xlab = "Rating",xlim = range(c(dat$men_rating,dat$women_rating)))
hist(dat$women_rating,add = T, col = adjustcolor("red",alpha.f = .5))
legend("topright",c("Men","Women"),fill = c(adjustcolor("blue",alpha.f = .5),adjustcolor("red",alpha.f = .5)))
?plot
#Q6
plot(dat$over.votes,dat$rating)
View(dat)
#Q6
plot(dat$over.votes,dat$rating,xlab = "No. of votes",ylab = "Rating")
#Q6
plot(dat$over.votes,dat$rating,xlab = "No. of Votes",ylab = "Rating")
plot(dat$over.votes,dat$rating,xlab = "# Votes",ylab = "Rating",pch = 15)
plot(dat$over.votes,dat$rating,xlab = "# Votes",ylab = "Rating",pch = 16)
?plot
#Q6
plot(dat$over.votes,dat$rating,xlab = "# Votes",ylab = "Rating")
plot(dat$over.votes,dat$rating,xlab = "# Votes",ylab = "Rating",pch = 16)
?text
plot(dat$over.votes,dat$rating,xlab = "# Votes",ylab = "Rating",pch = 16)
text(dat$name)
text(dat$over.votes,dat$rating,labels = dat$name)
#Q7
inds <- which(dat$rating>8.9)
plot(dat$over.votes,dat$rating,xlab = "# Votes",ylab = "Rating",pch = 16)
#Q7
inds <- which(dat$rating>8.9)
text(dat$over.votes[inds],dat$rating[inds],labels = dat$name[inds])
# another one with different dots
plot(dat$over.votes, dat$rating,
xlab = "# Votes", ylab = "Ratings", pch = 16)
## Problem 7
ind <- dat$rating > 8.9
# adding text to the lst plot
text(dat$over.votes[ind], dat$rating[ind],
labels = dat$name[ind])
plot(dat$over.votes,dat$rating,xlab = "# Votes",ylab = "Rating",pch = 16)
#Q7
inds <- which(dat$rating>8.9)
#or inds <- dat$rating>8.9 give logical output, but can be use here
text(dat$over.votes[inds],dat$rating[inds],labels = dat$name[inds])
?plot
## Problem 8
year.categ <- (dat$year < 1996) + 1  # 2 or 1 based on before 96 or not
plot(dat$over.votes, dat$rating,
xlab = "# Votes", ylab = "Ratings",
pch = 16, col = year.categ)  # col = number based on year category
legend("topright", pch = 16, col = c(2,1),
legend = c("before 1996", "after 1996"))
#Q8
before_1996 <- dat$year<1996
after_1996 <- dat$year>=1996
plot(dat$over.votes[before_1996],dat$rating[before_1996],xlab = "# Votes",ylab = "Rating",pch = 16,col = 1)
plot(dat$over.votes[after_1996],dat$rating[after_1996],xlab = "# Votes",ylab = "Rating",pch = 16, col = 2)
#Q8
year_category <- dat$year
plot(dat$over.votes[before_1996],dat$rating[before_1996],xlab = "# Votes",ylab = "Rating",pch = 16,col = year_category)
#Q8
year_category <- dat$year+1
#Q8
year_category <- dat$year>1996
plot(dat$over.votes[before_1996],dat$rating[before_1996],xlab = "# Votes",ylab = "Rating",pch = 16,col = year_category)
#Q8
year_category <- (dat$year>1996)+1
plot(dat$over.votes[before_1996],dat$rating[before_1996],xlab = "# Votes",ylab = "Rating",pch = 16,col = year_category)
#Q8
year_category <- (dat$year>1996)+2
plot(dat$over.votes[before_1996],dat$rating[before_1996],xlab = "# Votes",ylab = "Rating",pch = 16,col = year_category)
#Q8
year_category <- (dat$year>1996)+1
plot(dat$over.votes[before_1996],dat$rating[before_1996],xlab = "# Votes",ylab = "Rating",pch = 16,col = year_category)
legend("after 1996","before 1996", col = c(2,1))
legend("bottomright",c("after 1996","before 1996"), col = c(2,1))
legend("bottomright",c("after 1996","before 1996"), fill = c(2,1))
legend("bottomright",c("after 1996","before 1996"), fill = c(2,1),pch = 16)
legend("bottomright",c("after 1996","before 1996"), fill = c(2,1))
legend("topright", pch = 16, col = c(2,1),
legend = c("before 1996", "after 1996"))
legend("bottomright",c("after 1996","before 1996"), col = c(2,1))
legend("bottomright",c("after 1996","before 1996"), col = c(2,1), pch =16)
plot(dat$over.votes[before_1996],dat$rating[before_1996],xlab = "# Votes",ylab = "Rating",pch = 16,col = year_category)
legend("bottomright",c("after 1996","before 1996"), col = c(2,1), pch =16)
## Problem 9
plot(dat$year, dat$over.votes, ylab = "# votes", xlab = "Year")
#Q9
plot(dat$year, dat$over.votes, ylab = "# votes", xlab = "Year",pch =16)
?Sys.sleep
#10
plot(dat$year, dat$over.votes, ylab = "# votes", xlab = "Year",pch =16)
#10
plot(dat$over.votes,dat$rating,xlab = "# Votes",ylab = "Rating",pch = 16)
#10
plot(dat$over.votes,dat$rating,xlab = "# Votes",ylab = "Rating",pch = 16, type = "n")
for (i in 1:250) {
Sys.sleep(.1)
points(dat$over.votes,dat$rating)
}
#10
plot(dat$over.votes,dat$rating,xlab = "# Votes",ylab = "Rating",pch = 16, type = "n")
for (i in 1:250) {
Sys.sleep(.1)
points(dat$over.votes[i],dat$rating[i])
}
#10
plot(dat$over.votes,dat$rating,xlab = "# Votes",ylab = "Rating",pch = 16, type = "n")
for (i in 1:250) {
Sys.sleep(.1)
points(dat$over.votes[i],dat$rating[i],pch = 16)
}
#10
plot(dat$over.votes,dat$rating,xlab = "# Votes",ylab = "Rating",pch = 16, type = "n")
for (i in 1:250) {
Sys.sleep(.1)
points(dat$over.votes[i],dat$rating[i],pch = 16,col = year_category)
}
## Problem 10
# type = "n" makes an empty plot with the right axes
plot(dat$over.votes, dat$rating,
xlab = "# Votes", ylab = "Ratings",
pch = 16, col = year.categ, type = "n")
for(i in 1:length(dat$rating))
{
# gives a .1 second pause before running the next line
Sys.sleep(.1)
# plot the ith point
points(dat$over.votes[i], dat$rating[i],
pch = 16, col = year.categ[i])
}
#Q1
load("IMDB_movies.Rdata")
#Q8
year_category <- (dat$year>1996)+1
#10
plot(dat$over.votes,dat$rating,xlab = "# Votes",ylab = "Rating",pch = 16, type = "n")
for (i in 1:250) {
Sys.sleep(.1)
points(dat$over.votes[i],dat$rating[i],pch = 16,col = year_category)
}
#10
plot(dat$over.votes,dat$rating,xlab = "# Votes",ylab = "Rating",pch = 16, type = "n")
for (i in 1:250) {
Sys.sleep(.1)
points(dat$over.votes[i],dat$rating[i],pch = 16,col = year_category[i])
}
#10
plot(dat$over.votes,dat$rating,xlab = "# Votes",ylab = "Rating",pch = 16, type = "n")
for (i in 1:length(dat$rating)) {
Sys.sleep(.1)
points(dat$over.votes[i],dat$rating[i],pch = 16,col = year_category[i])
}
#Q1
load("IMDB_movies.Rdata")
#Q8
year_category <- (dat$year>1996)+1
#10
plot(dat$over.votes,dat$rating,xlab = "# Votes",ylab = "Rating",pch = 16, type = "n")
for (i in 1:length(dat$rating)) {
Sys.sleep(.1)
points(dat$over.votes[i],dat$rating[i],pch = 16,col = year_category[i])
}
#Q1
load("IMDB_movies.Rdata")
#Q8
year_category <- (dat$year>1996)+1
#10
plot(dat$over.votes,dat$rating,xlab = "# Votes",ylab = "Rating",pch = 16, type = "n")
for (i in 1:length(dat$rating)) {
Sys.sleep(.2)
points(dat$over.votes[i],dat$rating[i],pch = 16,col = year_category[i])
}
## Problem 1
# set your working repository correctly
load("IMDB_movies.Rdata")
head(dat)  # data is called dat
## Problem 8
year.categ <- (dat$year < 1996) + 1  # 2 or 1 based on before 96 or not
## Problem 10
# type = "n" makes an empty plot with the right axes
plot(dat$over.votes, dat$rating,
xlab = "# Votes", ylab = "Ratings",
pch = 16, col = year.categ, type = "n")
for(i in 1:length(dat$rating))
{
# gives a .1 second pause before running the next line
Sys.sleep(.1)
# plot the ith point
points(dat$over.votes[i], dat$rating[i],
pch = 16, col = year.categ[i])
}
